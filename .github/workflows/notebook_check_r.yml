name: Execute R notebooks

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      notebooks: ${{ steps.set-notebooks.outputs.notebooks }}
    steps:
    - id: checkout
      uses: actions/checkout@v4

    - name: Setup R Environment
      id: r-env-setup
      uses: ./.github/actions/setup-r-env
      with:
        python-version: '3.11'
        r-version: '4.4.3'
        install-jupyter: true
        restore-packages: true

    - id: set-notebooks
      name: Set notebook matrix
      run: |
        echo "notebooks=[ \
        {\"name\": \"integration\", \"path\": \"omics_types_integration/R/integration_notebook.ipynb\"}, \
        {\"name\": \"aggregation\", \"path\": \"proteomic_aggregation/R/proteomic_aggregation.ipynb\"}, \
        {\"name\": \"bioscales\", \"path\": \"bioscales_biogeochemical_metadata/R/bioscales_metadata.ipynb\"}, \
        {\"name\": \"neon\", \"path\": \"NEON_soil_metadata/R/NEON_data_exploration.ipynb\"}, \
        {\"name\": \"taxonomic\", \"path\": \"taxonomic_dist_by_soil_layer/R/taxonomic_dist_soil_layer_R.ipynb\"}, \
        {\"name\": \"nom\", \"path\": \"NOM_visualizations/R/NOM_R_notebook.ipynb\"}]" >> $GITHUB_OUTPUT

  execute-notebooks:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.setup.outputs.notebooks) }}
    steps:
    - id: checkout
      uses: actions/checkout@v4

    - name: Setup R Environment
      id: r-env-setup
      uses: ./.github/actions/setup-r-env
      with:
        python-version: '3.11'
        r-version: '4.4.3'
        install-jupyter: true
        restore-packages: true

    - id: execute
      name: Execute ${{ matrix.notebook.name }} notebook
      run: |
        echo "Executing notebook: ${{ matrix.notebook.path }}"
        
        # Check if notebook file exists
        if [ ! -f "${{ matrix.notebook.path }}" ]; then
          echo "ERROR: Notebook file not found: ${{ matrix.notebook.path }}"
          echo "FAILED" > results-${{ matrix.notebook.name }}.txt
          exit 1
        fi
        
        # Execute notebook
        if jupyter nbconvert --execute --to notebook --inplace "${{ matrix.notebook.path }}"; then
          echo "SUCCESS" > results-${{ matrix.notebook.name }}.txt
          echo "Notebook ${{ matrix.notebook.name }} executed successfully."
        else
          echo "FAILED" > results-${{ matrix.notebook.name }}.txt
          echo "Notebook ${{ matrix.notebook.name }} failed execution."
          exit 1
        fi

    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: notebook-results-${{ matrix.notebook.name }}
        path: results-${{ matrix.notebook.name }}.txt

  post-check:
    runs-on: ubuntu-latest
    needs: execute-notebooks
    if: always() # Always run this job
    steps:
    - name: Download all notebook results
      uses: actions/download-artifact@v4
      with:
        path: results/

    - name: Check notebook results
      run: |
        echo "Checking notebook execution results..."
        
        # Find all result files (accounting for artifact directory structure)
        find results/ -name "results-*.txt" -exec cat {} \;
        
        # Count failures
        FAILED_COUNT=$(find results/ -name "results-*.txt" -exec grep -l "FAILED" {} \; | wc -l)
        TOTAL_COUNT=$(find results/ -name "results-*.txt" | wc -l)
        
        echo "Total notebooks: $TOTAL_COUNT"
        echo "Failed notebooks: $FAILED_COUNT"
        
        if [ "$FAILED_COUNT" -gt 0 ]; then
          echo "❌ $FAILED_COUNT out of $TOTAL_COUNT notebooks failed execution."
          find results/ -name "results-*.txt" -exec grep -l "FAILED" {} \; | while read file; do
            notebook_name=$(basename "$file" | sed 's/results-\(.*\)\.txt/\1/')
            echo "Failed notebook: $notebook_name"
          done
          exit 1
        else
          echo "✅ All $TOTAL_COUNT notebooks executed successfully!"
        fi