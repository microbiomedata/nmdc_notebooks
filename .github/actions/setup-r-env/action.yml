name: 'Setup R Environment'
description: 'Sets up Python, Jupyter, R, system dependencies, and R packages with caching'

inputs:
  python-version:
    description: 'Python version to install'
    required: false
    default: '3.11'
  r-version:
    description: 'R version to install'
    required: false
    default: '4.4.3'
  install-jupyter:
    description: 'Whether to install Jupyter'
    required: false
    default: 'true'
  restore-packages:
    description: 'Whether to restore R packages from renv.lock'
    required: false
    default: 'true'

outputs:
  os-version:
    description: 'Operating system version'
    value: ${{ steps.get-version.outputs.os-version }}
  r-version-string:
    description: 'R version string'
    value: ${{ steps.get-version.outputs.r-version }}
  cache-hit:
    description: 'Whether the renv cache was hit'
    value: ${{ steps.cache-renv.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Set RENV_PATHS_ROOT
      shell: bash
      run: |
        echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV

    - name: Set up Python
      if: inputs.install-jupyter == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Jupyter
      if: inputs.install-jupyter == 'true'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install jupyter

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ inputs.r-version }}

    - name: Install system dependencies on Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y make libicu-dev libxml2-dev libssl-dev pandoc librdf0-dev libnode-dev libcurl4-gnutls-dev libpng-dev

    - name: Install and activate renv
      shell: Rscript {0}
      run: |
        install.packages("renv", repos = "https://cloud.r-project.org/")
        renv::activate()

    - name: Get R and OS version
      id: get-version
      shell: Rscript {0}
      run: |
        cat("os-version=", sessionInfo()$running, "\n", sep = "", file = Sys.getenv("GITHUB_OUTPUT"), append = TRUE)
        cat("r-version=", R.Version()$version.string, "\n", sep = "", file = Sys.getenv("GITHUB_OUTPUT"), append = TRUE)

    - name: Restore Renv package cache
      id: cache-renv
      uses: actions/cache@v4
      with:
        path: ${{ env.RENV_PATHS_ROOT }}
        key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-renv-${{ hashFiles('renv.lock') }}
        restore-keys: |
          ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-renv-

    - name: Install R dependencies
      if: inputs.restore-packages == 'true'
      shell: Rscript {0}
      run: |
        tryCatch({
          # Restore packages from renv.lock
          renv::restore()
          
          # Install IRkernel for Jupyter execution (excluded from renv.lock)
          if (!require("IRkernel", quietly = TRUE)) {
            install.packages("IRkernel", repos = "https://cloud.r-project.org/")
          }
          IRkernel::installspec(name = "ir", displayname = "R")
          
          cat("✅ R environment setup completed successfully\n")
        }, error = function(err) {
          cat("❌ ERROR during R dependency installation:\n")
          cat(err$message, "\n")
          cat("Full error details:\n")
          print(err)
          stop(err)
        })